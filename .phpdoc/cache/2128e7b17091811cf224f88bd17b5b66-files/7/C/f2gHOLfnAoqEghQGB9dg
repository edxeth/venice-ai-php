1742294459
2128e7b17091811cf224f88bd17b5b66-phpdoc%3A352ec9d5829e014ac7c04dc01cd307a9-78105eeb613d44caa4755ab85a27af25
s:7744:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjE3OiJhZHZhbmNlZF9jaGF0LnBocCI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBoYXNoIjtzOjMyOiI3ODEwNWVlYjYxM2Q0NGNhYTQ3NTVhYjg1YTI3YWYyNSI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjMxOiJleGFtcGxlcy90ZXh0L2FkdmFuY2VkX2NoYXQucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czozNjg0OiI8P3BocAovKioKICogVmVuaWNlIEFJIEFQSSBFeGFtcGxlOiBBZHZhbmNlZCBDaGF0IEZlYXR1cmVzCiAqIAogKiBUaGlzIGV4YW1wbGUgZGVtb25zdHJhdGVzIGFkdmFuY2VkIGNoYXQgY29tcGxldGlvbiBmZWF0dXJlczoKICogMS4gU3lzdGVtIG1lc3NhZ2VzIHRvIGNvbnRyb2wgQUkgYmVoYXZpb3IKICogMi4gVGVtcGVyYXR1cmUgYW5kIG90aGVyIGdlbmVyYXRpb24gcGFyYW1ldGVycwogKiAzLiBUb2tlbiBsaW1pdHMgYW5kIHBlbmFsdGllcwogKiA0LiBWZW5pY2Utc3BlY2lmaWMgcGFyYW1ldGVycwogKiA1LiBTdG9wIHNlcXVlbmNlcwogKiAKICogQWZ0ZXIgdW5kZXJzdGFuZGluZyBiYXNpY19jaGF0LnBocCwgdGhpcyBleGFtcGxlIHNob3dzIHlvdQogKiBob3cgdG8gZmluZS10dW5lIHRoZSBBSSdzIGJlaGF2aW9yIGZvciBzcGVjaWZpYyB1c2UgY2FzZXMuCiAqLwoKcmVxdWlyZV9vbmNlIF9fRElSX18gLiAnLy4uLy4uL1ZlbmljZUFJLnBocCc7CnJlcXVpcmVfb25jZSBfX0RJUl9fIC4gJy8uLi91dGlscy5waHAnOwokY29uZmlnID0gcmVxdWlyZV9vbmNlIF9fRElSX18gLiAnLy4uL2NvbmZpZy5waHAnOwoKLy8gSW5pdGlhbGl6ZSB0aGUgVmVuaWNlIEFJIGNsaWVudAokdmVuaWNlID0gbmV3IFZlbmljZUFJKCRjb25maWdbJ2FwaV9rZXknXSwgdHJ1ZSk7Cgp0cnkgewogICAgLy8gRXhhbXBsZSAxOiBVc2luZyBzeXN0ZW0gbWVzc2FnZSBhbmQgdGVtcGVyYXR1cmUKICAgIHByaW50U2VjdGlvbigiRXhhbXBsZSAxOiBTeXN0ZW0gTWVzc2FnZSBhbmQgVGVtcGVyYXR1cmUiKTsKICAgIAogICAgJHJlc3BvbnNlID0gJHZlbmljZS0+Y3JlYXRlQ2hhdENvbXBsZXRpb24oCiAgICAgICAgWwogICAgICAgICAgICAvLyBTeXN0ZW0gbWVzc2FnZSBzZXRzIHRoZSBiZWhhdmlvcgogICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAncm9sZScgPT4gJ3N5c3RlbScsCiAgICAgICAgICAgICAgICAnY29udGVudCcgPT4gJ1lvdSBhcmUgYSBwcm9mZXNzaW9uYWwgc2NpZW5jZSB3cml0ZXIgd2hvIGV4cGxhaW5zIGNvbXBsZXggdG9waWNzIHNpbXBseS4nCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICdyb2xlJyA9PiAndXNlcicsCiAgICAgICAgICAgICAgICAnY29udGVudCcgPT4gJ0V4cGxhaW4gcXVhbnR1bSBjb21wdXRpbmcuJwogICAgICAgICAgICBdCiAgICAgICAgXSwKICAgICAgICAnZGVmYXVsdCcsICAvLyBtb2RlbAogICAgICAgIFsKICAgICAgICAgICAgJ3RlbXBlcmF0dXJlJyA9PiAwLjcsICAvLyBMb3dlciA9IG1vcmUgZm9jdXNlZCwgSGlnaGVyID0gbW9yZSBjcmVhdGl2ZQogICAgICAgICAgICAnbWF4X2NvbXBsZXRpb25fdG9rZW5zJyA9PiAyMDAgIC8vIExpbWl0IHJlc3BvbnNlIGxlbmd0aAogICAgICAgIF0KICAgICk7CiAgICAKICAgIHByaW50UmVzcG9uc2UoJHJlc3BvbnNlWydjaG9pY2VzJ11bMF1bJ21lc3NhZ2UnXVsnY29udGVudCddLCAiUmVzcG9uc2Ugd2l0aCB0ZW1wZXJhdHVyZSAwLjciKTsKCiAgICAvLyBFeGFtcGxlIDI6IFVzaW5nIHBlbmFsdGllcyB0byBjb250cm9sIHJlcGV0aXRpb24KICAgIHByaW50U2VjdGlvbigiRXhhbXBsZSAyOiBVc2luZyBQZW5hbHRpZXMiKTsKICAgIAogICAgJHJlc3BvbnNlID0gJHZlbmljZS0+Y3JlYXRlQ2hhdENvbXBsZXRpb24oCiAgICAgICAgWwogICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAncm9sZScgPT4gJ3VzZXInLAogICAgICAgICAgICAgICAgJ2NvbnRlbnQnID0+ICdXcml0ZSBhIGNyZWF0aXZlIHN0b3J5IGFib3V0IGEgcm9ib3QuJwogICAgICAgICAgICBdCiAgICAgICAgXSwKICAgICAgICAnZGVmYXVsdCcsCiAgICAgICAgWwogICAgICAgICAgICAndGVtcGVyYXR1cmUnID0+IDAuOSwKICAgICAgICAgICAgJ2ZyZXF1ZW5jeV9wZW5hbHR5JyA9PiAwLjcsICAvLyBSZWR1Y2VzIHJlcGV0aXRpb24gb2Ygc3BlY2lmaWMgdG9rZW5zCiAgICAgICAgICAgICdwcmVzZW5jZV9wZW5hbHR5JyA9PiAwLjcgICAgLy8gRW5jb3VyYWdlcyBjb3ZlcmluZyBuZXcgdG9waWNzCiAgICAgICAgXQogICAgKTsKICAgIAogICAgcHJpbnRSZXNwb25zZSgkcmVzcG9uc2VbJ2Nob2ljZXMnXVswXVsnbWVzc2FnZSddWydjb250ZW50J10sICJSZXNwb25zZSB3aXRoIHBlbmFsdGllcyIpOwoKICAgIC8vIEV4YW1wbGUgMzogVXNpbmcgVmVuaWNlIHBhcmFtZXRlcnMgYW5kIHN0b3Agc2VxdWVuY2VzCiAgICBwcmludFNlY3Rpb24oIkV4YW1wbGUgMzogVmVuaWNlIFBhcmFtZXRlcnMgYW5kIFN0b3AgU2VxdWVuY2VzIik7CiAgICAKICAgICRyZXNwb25zZSA9ICR2ZW5pY2UtPmNyZWF0ZUNoYXRDb21wbGV0aW9uKAogICAgICAgIFsKICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgJ3JvbGUnID0+ICd1c2VyJywKICAgICAgICAgICAgICAgICdjb250ZW50JyA9PiAnVGVsbCBtZSBhIGpva2UuJwogICAgICAgICAgICBdCiAgICAgICAgXSwKICAgICAgICAnZGVmYXVsdCcsCiAgICAgICAgWwogICAgICAgICAgICAndmVuaWNlX3BhcmFtZXRlcnMnID0+IFsKICAgICAgICAgICAgICAgICdpbmNsdWRlX3ZlbmljZV9zeXN0ZW1fcHJvbXB0JyA9PiBmYWxzZSwgIC8vIERvbid0IGluY2x1ZGUgZGVmYXVsdCBzeXN0ZW0gcHJvbXB0CiAgICAgICAgICAgICAgICAnY2hhcmFjdGVyX3NsdWcnID0+ICdjb21lZGlhbicgIC8vIFVzZSBjb21lZGlhbiBjaGFyYWN0ZXIgcHJlc2V0CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICdzdG9wJyA9PiBbJ1E6JywgJ0E6J10sICAvLyBTdG9wIGdlbmVyYXRpbmcgYXQgdGhlc2Ugc2VxdWVuY2VzCiAgICAgICAgICAgICd0b3BfcCcgPT4gMC45ICAvLyBOdWNsZXVzIHNhbXBsaW5nIHBhcmFtZXRlcgogICAgICAgIF0KICAgICk7CiAgICAKICAgIHByaW50UmVzcG9uc2UoJHJlc3BvbnNlWydjaG9pY2VzJ11bMF1bJ21lc3NhZ2UnXVsnY29udGVudCddLCAiUmVzcG9uc2Ugd2l0aCBjdXN0b20gcGFyYW1ldGVycyIpOwoKfSBjYXRjaCAoRXhjZXB0aW9uICRlKSB7CiAgICBlY2hvICJFcnJvcjogIiAuICRlLT5nZXRNZXNzYWdlKCkgLiAiXG4iOwogICAgZXhpdCgxKTsKfQoKLy8gT3V0cHV0IHBhcmFtZXRlciBleHBsYW5hdGlvbnMKcHJpbnRTZWN0aW9uKCJQYXJhbWV0ZXIgR3VpZGUiKTsKZWNobyAidGVtcGVyYXR1cmU6IENvbnRyb2xzIHJhbmRvbW5lc3MgKDAuMCAtIDIuMClcbiI7CmVjaG8gInRvcF9wOiBBbHRlcm5hdGl2ZSB0byB0ZW1wZXJhdHVyZSwgY29udHJvbHMgdG9rZW4gc2VsZWN0aW9uXG4iOwplY2hvICJmcmVxdWVuY3lfcGVuYWx0eTogUmVkdWNlcyB0b2tlbiByZXBldGl0aW9uICgtMi4wIC0gMi4wKVxuIjsKZWNobyAicHJlc2VuY2VfcGVuYWx0eTogRW5jb3VyYWdlcyBuZXcgdG9waWNzICgtMi4wIC0gMi4wKVxuIjsKZWNobyAibWF4X2NvbXBsZXRpb25fdG9rZW5zOiBMaW1pdHMgcmVzcG9uc2UgbGVuZ3RoXG4iOwplY2hvICJzdG9wOiBBcnJheSBvZiBzZXF1ZW5jZXMgd2hlcmUgZ2VuZXJhdGlvbiBzaG91bGQgc3RvcFxuIjsKCnByaW50U2VjdGlvbigiVmVuaWNlIFBhcmFtZXRlcnMiKTsKZWNobyAiaW5jbHVkZV92ZW5pY2Vfc3lzdGVtX3Byb21wdDogSW5jbHVkZSBkZWZhdWx0IHN5c3RlbSBwcm9tcHRcbiI7CmVjaG8gImNoYXJhY3Rlcl9zbHVnOiBVc2UgcHJlZGVmaW5lZCBjaGFyYWN0ZXIgcGVyc29uYWxpdGllc1xuIjsiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjQ1OiJWZW5pY2UgQUkgQVBJIEV4YW1wbGU6IEFkdmFuY2VkIENoYXQgRmVhdHVyZXMiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MzQ2OiJUaGlzIGV4YW1wbGUgZGVtb25zdHJhdGVzIGFkdmFuY2VkIGNoYXQgY29tcGxldGlvbiBmZWF0dXJlczoKMS4gU3lzdGVtIG1lc3NhZ2VzIHRvIGNvbnRyb2wgQUkgYmVoYXZpb3IKMi4gVGVtcGVyYXR1cmUgYW5kIG90aGVyIGdlbmVyYXRpb24gcGFyYW1ldGVycwozLiBUb2tlbiBsaW1pdHMgYW5kIHBlbmFsdGllcwo0LiBWZW5pY2Utc3BlY2lmaWMgcGFyYW1ldGVycwo1LiBTdG9wIHNlcXVlbmNlcwoKQWZ0ZXIgdW5kZXJzdGFuZGluZyBiYXNpY19jaGF0LnBocCwgdGhpcyBleGFtcGxlIHNob3dzIHlvdQpob3cgdG8gZmluZS10dW5lIHRoZSBBSSdzIGJlaGF2aW9yIGZvciBzcGVjaWZpYyB1c2UgY2FzZXMuIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6MDoiIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTowOnt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";